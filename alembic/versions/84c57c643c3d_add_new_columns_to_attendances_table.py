"""Add new columns to attendances table

Revision ID: 84c57c643c3d
Revises: 784895e1b89b
Create Date: 2025-10-31 23:05:58.777251

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '84c57c643c3d'
down_revision: Union[str, Sequence[str], None] = '784895e1b89b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_session_attendances_id'), table_name='session_attendances')
    op.drop_table('session_attendances')
    op.add_column('attendances', sa.Column('teacher_status', sa.String(), nullable=True))
    op.add_column('attendances', sa.Column('schedule_id', sa.Integer(), nullable=True))
    op.add_column('attendances', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.create_foreign_key(None, 'attendances', 'schedules', ['schedule_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'attendances', type_='foreignkey')
    op.drop_column('attendances', 'updated_at')
    op.drop_column('attendances', 'schedule_id')
    op.drop_column('attendances', 'teacher_status')
    op.create_table('session_attendances',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('schedule_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('class_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('teacher_status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('student_status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], name=op.f('session_attendances_schedule_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('session_attendances_pkey'))
    )
    op.create_index(op.f('ix_session_attendances_id'), 'session_attendances', ['id'], unique=False)
    # ### end Alembic commands ###
